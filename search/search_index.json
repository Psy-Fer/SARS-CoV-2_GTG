{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to GTG SARS-CoV-2 docs Here is the documentation for running SARS-CoV-2 amplicons through nanopore sequencing to get consensus genomes and find their lineages. Most of the information here is tested thoroughly with the Eden 2.5kb amplicon system, using the rapid barcoding kits, on PromethION flowcells. Most people will be using something else, and we recommend using the Midnight 1.2kb amplicons, or artic V3 amplicons. Parts of the pipelines must be modified for use with the appropriate amplicon scheme. We have tried to make it clear where in the processes these changes need to be implemented, along with some tips along the way. Please let us know if you have any questions, or require assistance. Related work Publication: Analytical validity of nanopore sequencing for rapid SARS-CoV-2 genome analysis Pre-print: Analytical validity of nanopore sequencing for rapid SARS-CoV-2 genome analysis Git-hub: SARS-CoV-2_GTG Nanopore: Oxford Nanopore Technologies RAMPART: artic-network/rampart ARTIC (300bp): nCoV-2019 sequencing protocol v3 (LoCost) V.3 Midnight (1200bp): nCoV-2019 sequencing protocol (RAPID barcoding, 1200bp amplicon) V.4 Eden (2500bp): SARS-CoV-2 Genome Sequencing Using Long Pooled Amplicons on Illumina Platforms","title":"Home"},{"location":"#welcome-to-gtg-sars-cov-2-docs","text":"Here is the documentation for running SARS-CoV-2 amplicons through nanopore sequencing to get consensus genomes and find their lineages. Most of the information here is tested thoroughly with the Eden 2.5kb amplicon system, using the rapid barcoding kits, on PromethION flowcells. Most people will be using something else, and we recommend using the Midnight 1.2kb amplicons, or artic V3 amplicons. Parts of the pipelines must be modified for use with the appropriate amplicon scheme. We have tried to make it clear where in the processes these changes need to be implemented, along with some tips along the way. Please let us know if you have any questions, or require assistance.","title":"Welcome to GTG SARS-CoV-2 docs"},{"location":"#related-work","text":"Publication: Analytical validity of nanopore sequencing for rapid SARS-CoV-2 genome analysis Pre-print: Analytical validity of nanopore sequencing for rapid SARS-CoV-2 genome analysis Git-hub: SARS-CoV-2_GTG Nanopore: Oxford Nanopore Technologies RAMPART: artic-network/rampart ARTIC (300bp): nCoV-2019 sequencing protocol v3 (LoCost) V.3 Midnight (1200bp): nCoV-2019 sequencing protocol (RAPID barcoding, 1200bp amplicon) V.4 Eden (2500bp): SARS-CoV-2 Genome Sequencing Using Long Pooled Amplicons on Illumina Platforms","title":"Related work"},{"location":"analysis/","text":"","title":"Analysis"},{"location":"install/","text":"Installation Installation instructuons for both the ARTIC analysis pipeline, as well as RAMPART for real-time monitoring. Linux miniconda Visit https://docs.conda.io/en/latest/miniconda.html and download the appropriate binary. Most likely that will be the following: Python 3.8 Miniconda3 Linux 64-bit Command line download: wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh Output example: --YYYY-MM-DD HH:MM:SS-- https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh Resolving repo.anaconda.com (repo.anaconda.com)... xxx.xxx.xxx.x, xxx.xxx.xxx.x, yyyy:yyyy::yyyy:yyyy, ... Connecting to repo.anaconda.com (repo.anaconda.com)|xxx.xxx.xxx.x|:xxx... connected. HTTP request sent, awaiting response... 200 OK Length: 94235922 (90M) [application/x-sh] Saving to: 'Miniconda3-latest-Linux-x86_64.sh\u2019 Miniconda3-latest-L 100%[=================== ] 89.87M 5.41MB/s in 17s YYYY-MM-DD HH:MM:SS (5.36 MB/s) - 'Miniconda3-latest-Linux-x86_64.sh\u2019 saved [94235922/94235922] Modify the shell file with execute permissions chmod +x Miniconda3-latest-Linux-x86_64.sh run the shell file ./Miniconda3-latest-Linux-x86_64.sh Welcome to Miniconda3 py38_4.9.2 In order to continue the installation process, please review the license agreement. Please, press ENTER to continue Press ENTER The Lisence information will apper. Press SPACE multiple times to scroll to the bottom. insert lisence image Last updated September 28, 2020 Do you accept the license terms? [yes|no] [no] type yes and hit ENTER Do you accept the license terms? [yes|no] [no] yes Miniconda3 will now be installed into this location: /home/jamfer/miniconda3 - Press ENTER to confirm the location - Press CTRL-C to abort the installation - Or specify a different location below [/home/jamfer/miniconda3] either hit enter to install to the default /HOME/USER/miniconda3 folder, or enter your own directory. For example, enter ./miniconda3 to build in the current directory ... six pkgs/main/linux-64::six-1.15.0-py38h06a4308_0 sqlite pkgs/main/linux-64::sqlite-3.33.0-h62c20be_0 tk pkgs/main/linux-64::tk-8.6.10-hbc83047_0 tqdm pkgs/main/noarch::tqdm-4.51.0-pyhd3eb1b0_0 urllib3 pkgs/main/noarch::urllib3-1.25.11-py_0 wheel pkgs/main/noarch::wheel-0.35.1-pyhd3eb1b0_0 xz pkgs/main/linux-64::xz-5.2.5-h7b6447c_0 yaml pkgs/main/linux-64::yaml-0.2.5-h7b6447c_0 zlib pkgs/main/linux-64::zlib-1.2.11-h7b6447c_3 Preparing transaction: done Executing transaction: done installation finished. Do you wish the installer to initialize Miniconda3 by running conda init? [yes|no] [no] type yes and enter (we will fix the problems this causes in a moment) ... Preparing transaction: done Executing transaction: done installation finished. Do you wish the installer to initialize Miniconda3 by running conda init? [yes|no] [no] yes ./Miniconda3-latest-Linux-x86_64.sh: 494: ./Miniconda3-latest-Linux-x86_64.sh: [[: not found no change /home/jamfer/data/SARS-CoV-2/docs/miniconda3/condabin/conda no change /home/jamfer/data/SARS-CoV-2/docs/miniconda3/bin/conda no change /home/jamfer/data/SARS-CoV-2/docs/miniconda3/bin/conda-env no change /home/jamfer/data/SARS-CoV-2/docs/miniconda3/bin/activate no change /home/jamfer/data/SARS-CoV-2/docs/miniconda3/bin/deactivate no change /home/jamfer/data/SARS-CoV-2/docs/miniconda3/etc/profile.d/conda.sh no change /home/jamfer/data/SARS-CoV-2/docs/miniconda3/etc/fish/conf.d/conda.fish no change /home/jamfer/data/SARS-CoV-2/docs/miniconda3/shell/condabin/Conda.psm1 no change /home/jamfer/data/SARS-CoV-2/docs/miniconda3/shell/condabin/conda-hook.ps1 no change /home/jamfer/data/SARS-CoV-2/docs/miniconda3/lib/python3.8/site-packages/xontrib/conda.xsh no change /home/jamfer/data/SARS-CoV-2/docs/miniconda3/etc/profile.d/conda.csh modified /home/jamfer/.bashrc == For changes to take effect, close and re-open your current shell. == If you'd prefer that conda's base environment not be activated on startup, set the auto_activate_base parameter to false: conda config --set auto_activate_base false Thank you for installing Miniconda3! Close terminal and open again which conda mine says /home/jamfer/data/SARS-CoV-2/docs/miniconda3/condabin/conda which is where I just installed it. We now need to remove the automatic conda init from ~/.bashrc so it does not interfere with other environments. open the ~/.bashrc file and find the conda init commands cat ~/.bashrc ... # conda initialize # !! Contents within this block are managed by 'conda init' !! __conda_setup=\"$('/home/jamfer/data/SARS-CoV-2/docs/miniconda3/bin/conda' 'shell.bash' 'hook' 2 /dev/null)\" if [ $? -eq 0 ]; then eval \"$__conda_setup\" else if [ -f \"/home/jamfer/data/SARS-CoV-2/docs/miniconda3/etc/profile.d/conda.sh\" ]; then . \"/home/jamfer/data/SARS-CoV-2/docs/miniconda3/etc/profile.d/conda.sh\" else export PATH=\"/home/jamfer/data/SARS-CoV-2/docs/miniconda3/bin:$PATH\" fi fi unset __conda_setup # conda initialize Yours will look slightly different due to different paths. We need to copy this information into a separate shell file, then remove this from ~/.bashrc . copy everything similar to above then copy into a file called something like ~/conda_init.sh and remove the same section from ~/.bashrc Close and open terminal again To activate conda, we can now run source ~/conda_init.sh ARTIC and RAMPART Download the repo from github cd git clone https://github.com/artic-network/artic-ncov2019.git cd artic-ncov2019 conda env remove -n artic-ncov2019 conda env create -f environment.yml insert image of venv installing Other Operating Systems will work, but may need system specific changes to installation method. Let us know if you would like this extended to other Operating Systems.","title":"Install"},{"location":"install/#installation","text":"Installation instructuons for both the ARTIC analysis pipeline, as well as RAMPART for real-time monitoring.","title":"Installation"},{"location":"install/#linux","text":"","title":"Linux"},{"location":"install/#miniconda","text":"Visit https://docs.conda.io/en/latest/miniconda.html and download the appropriate binary. Most likely that will be the following: Python 3.8 Miniconda3 Linux 64-bit Command line download: wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh Output example: --YYYY-MM-DD HH:MM:SS-- https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh Resolving repo.anaconda.com (repo.anaconda.com)... xxx.xxx.xxx.x, xxx.xxx.xxx.x, yyyy:yyyy::yyyy:yyyy, ... Connecting to repo.anaconda.com (repo.anaconda.com)|xxx.xxx.xxx.x|:xxx... connected. HTTP request sent, awaiting response... 200 OK Length: 94235922 (90M) [application/x-sh] Saving to: 'Miniconda3-latest-Linux-x86_64.sh\u2019 Miniconda3-latest-L 100%[=================== ] 89.87M 5.41MB/s in 17s YYYY-MM-DD HH:MM:SS (5.36 MB/s) - 'Miniconda3-latest-Linux-x86_64.sh\u2019 saved [94235922/94235922] Modify the shell file with execute permissions chmod +x Miniconda3-latest-Linux-x86_64.sh run the shell file ./Miniconda3-latest-Linux-x86_64.sh Welcome to Miniconda3 py38_4.9.2 In order to continue the installation process, please review the license agreement. Please, press ENTER to continue Press ENTER The Lisence information will apper. Press SPACE multiple times to scroll to the bottom. insert lisence image Last updated September 28, 2020 Do you accept the license terms? [yes|no] [no] type yes and hit ENTER Do you accept the license terms? [yes|no] [no] yes Miniconda3 will now be installed into this location: /home/jamfer/miniconda3 - Press ENTER to confirm the location - Press CTRL-C to abort the installation - Or specify a different location below [/home/jamfer/miniconda3] either hit enter to install to the default /HOME/USER/miniconda3 folder, or enter your own directory. For example, enter ./miniconda3 to build in the current directory ... six pkgs/main/linux-64::six-1.15.0-py38h06a4308_0 sqlite pkgs/main/linux-64::sqlite-3.33.0-h62c20be_0 tk pkgs/main/linux-64::tk-8.6.10-hbc83047_0 tqdm pkgs/main/noarch::tqdm-4.51.0-pyhd3eb1b0_0 urllib3 pkgs/main/noarch::urllib3-1.25.11-py_0 wheel pkgs/main/noarch::wheel-0.35.1-pyhd3eb1b0_0 xz pkgs/main/linux-64::xz-5.2.5-h7b6447c_0 yaml pkgs/main/linux-64::yaml-0.2.5-h7b6447c_0 zlib pkgs/main/linux-64::zlib-1.2.11-h7b6447c_3 Preparing transaction: done Executing transaction: done installation finished. Do you wish the installer to initialize Miniconda3 by running conda init? [yes|no] [no] type yes and enter (we will fix the problems this causes in a moment) ... Preparing transaction: done Executing transaction: done installation finished. Do you wish the installer to initialize Miniconda3 by running conda init? [yes|no] [no] yes ./Miniconda3-latest-Linux-x86_64.sh: 494: ./Miniconda3-latest-Linux-x86_64.sh: [[: not found no change /home/jamfer/data/SARS-CoV-2/docs/miniconda3/condabin/conda no change /home/jamfer/data/SARS-CoV-2/docs/miniconda3/bin/conda no change /home/jamfer/data/SARS-CoV-2/docs/miniconda3/bin/conda-env no change /home/jamfer/data/SARS-CoV-2/docs/miniconda3/bin/activate no change /home/jamfer/data/SARS-CoV-2/docs/miniconda3/bin/deactivate no change /home/jamfer/data/SARS-CoV-2/docs/miniconda3/etc/profile.d/conda.sh no change /home/jamfer/data/SARS-CoV-2/docs/miniconda3/etc/fish/conf.d/conda.fish no change /home/jamfer/data/SARS-CoV-2/docs/miniconda3/shell/condabin/Conda.psm1 no change /home/jamfer/data/SARS-CoV-2/docs/miniconda3/shell/condabin/conda-hook.ps1 no change /home/jamfer/data/SARS-CoV-2/docs/miniconda3/lib/python3.8/site-packages/xontrib/conda.xsh no change /home/jamfer/data/SARS-CoV-2/docs/miniconda3/etc/profile.d/conda.csh modified /home/jamfer/.bashrc == For changes to take effect, close and re-open your current shell. == If you'd prefer that conda's base environment not be activated on startup, set the auto_activate_base parameter to false: conda config --set auto_activate_base false Thank you for installing Miniconda3! Close terminal and open again which conda mine says /home/jamfer/data/SARS-CoV-2/docs/miniconda3/condabin/conda which is where I just installed it. We now need to remove the automatic conda init from ~/.bashrc so it does not interfere with other environments. open the ~/.bashrc file and find the conda init commands cat ~/.bashrc ... # conda initialize # !! Contents within this block are managed by 'conda init' !! __conda_setup=\"$('/home/jamfer/data/SARS-CoV-2/docs/miniconda3/bin/conda' 'shell.bash' 'hook' 2 /dev/null)\" if [ $? -eq 0 ]; then eval \"$__conda_setup\" else if [ -f \"/home/jamfer/data/SARS-CoV-2/docs/miniconda3/etc/profile.d/conda.sh\" ]; then . \"/home/jamfer/data/SARS-CoV-2/docs/miniconda3/etc/profile.d/conda.sh\" else export PATH=\"/home/jamfer/data/SARS-CoV-2/docs/miniconda3/bin:$PATH\" fi fi unset __conda_setup # conda initialize Yours will look slightly different due to different paths. We need to copy this information into a separate shell file, then remove this from ~/.bashrc . copy everything similar to above then copy into a file called something like ~/conda_init.sh and remove the same section from ~/.bashrc Close and open terminal again To activate conda, we can now run source ~/conda_init.sh","title":"miniconda"},{"location":"install/#artic-and-rampart","text":"Download the repo from github cd git clone https://github.com/artic-network/artic-ncov2019.git cd artic-ncov2019 conda env remove -n artic-ncov2019 conda env create -f environment.yml insert image of venv installing Other Operating Systems will work, but may need system specific changes to installation method. Let us know if you would like this extended to other Operating Systems.","title":"ARTIC and RAMPART"},{"location":"inter/","text":"","title":"interARTIC"},{"location":"protocols/","text":"Protocols The protocol refers to the amplicon set you are using for nanopore amplicons sequencing Below are the 3 methods we have used in our sequencing of SARS-CoV-2 at the Garvan Institute in Sydney Australia, for rapid turn around times for use in contact tracing. ARTIC (300bp): nCoV-2019 sequencing protocol v3 (LoCost) V.3 Midnight (1200bp): nCoV-2019 sequencing protocol (RAPID barcoding, 1200bp amplicon) V.4 Eden (2500bp): SARS-CoV-2 Genome Sequencing Using Long Pooled Amplicons on Illumina Platforms","title":"Protocols"},{"location":"protocols/#protocols","text":"The protocol refers to the amplicon set you are using for nanopore amplicons sequencing Below are the 3 methods we have used in our sequencing of SARS-CoV-2 at the Garvan Institute in Sydney Australia, for rapid turn around times for use in contact tracing. ARTIC (300bp): nCoV-2019 sequencing protocol v3 (LoCost) V.3 Midnight (1200bp): nCoV-2019 sequencing protocol (RAPID barcoding, 1200bp amplicon) V.4 Eden (2500bp): SARS-CoV-2 Genome Sequencing Using Long Pooled Amplicons on Illumina Platforms","title":"Protocols"},{"location":"realtime/","text":"Real-time monitoring Using RAMPART, we can monitor the sequencing depth in real time for each sample across all amplicons. This allows the user to know when they have enough depth and coverage, and stop the run, for rapid turn around times, and for re-using flowcells. The documentation for RAMPART is located here: RAMPART: artic-network/rampart Here is how we set it up and run it for modified protocols. Installation Please see Intallation page for conda and repository setup. For use, please refer to the relevent protocol. Protocol files ARTIC V3 Each protocol with different primer/amplicon sets, will need their own configuration files to work with RAMPART (and the ARTIC analysis pipeline too). For RAMPART, the default files for artic V3 files are located in (path depends on install location of ncov2019 git) --protocol ~/artic-ncov2019/rampart/ it contains the following files: genome.json primers.json protocol.json README.md references.fasta If the reference is the same as used here, then you can simply copy genome.json references.fasta to your new protocol folder. Otherwise you will need to build these yourself. (shoot me a message and I can help) for primers.json, copy the main structure, but replace the values with your amplicon [start,stop] positions { \"name\": \"nCoV2019 primer scheme v1.0\", \"amplicons\": [ [30, 410], [320, 726], [642, 1028], [943, 1337], [1242, 1651], [1573, 1964], [1875, 2269], ... Notice that each primer is overlapping a bit here, so you are placing them as A/B/A/B or 1/2/1/2... The protocol.json is where you can place some information about the protocol and various thresholds for depth/coverage { \"name\": \"ARTIC nCoV2019 protocol v1.0\", \"description\": \"Amplicon based sequencing of novel coronavirus 2019 (nCoV2019).\", \"url\": \"http://artic.network/\", \"displayOptions\": { \"coverageThresholds\": { \" 200x\": 200, \" 100x\": 100, \" 20x\": 20, \"0x\": 0 } } } Eden 2.5kb Download RAMPART protocol files cd git clone https://github.com/Psy-Fer/SARS-CoV-2_GTG.git protocol located in --protocol ~/SARS-CoV-2_GTG/protocols/Kirby/V1/ Midnight 1.2kb Download RAMPART protocol files (similar to Eden method above) cd git clone https://github.com/Psy-Fer/SARS-CoV-2_GTG.git protocol located in --protocol ~/SARS-CoV-2_GTG/protocols/Midnight/V1/ Experiment files Two fies are needed for any experiment. run_configuration.json and cmd.txt run_configuration.json A title, followed by details for each sample. For ALL protocols with Native barcodes, it would look something like this: { \"title\": \"SARS-CoV-2 kirby_artic-4 nCoV_694,699,706,707,711,712,690,708,660,673,NegRT\", \"samples\": [ { \"name\": \"nCoV_694\", \"description\": \"\", \"barcodes\": [ \"NB01\" ] }, { \"name\": \"nCoV_699\", \"description\": \"\", \"barcodes\": [ \"NB02\" ] }, { \"name\": \"nCoV_706\", \"description\": \"\", \"barcodes\": [ \"NB03\" ] }, { \"name\": \"nCoV_707\", \"description\": \"\", \"barcodes\": [ \"NB04\" ] }, { \"name\": \"nCoV_711\", \"description\": \"\", \"barcodes\": [ \"NB05\" ] }, { \"name\": \"nCoV_712\", \"description\": \"\", \"barcodes\": [ \"NB06\" ] }, { \"name\": \"nCoV_690\", \"description\": \"\", \"barcodes\": [ \"NB07\" ] }, { \"name\": \"nCoV_708\", \"description\": \"\", \"barcodes\": [ \"NB08\" ] }, { \"name\": \"nCoV_660\", \"description\": \"\", \"barcodes\": [ \"NB09\" ] }, { \"name\": \"nCoV_673\", \"description\": \"\", \"barcodes\": [ \"NB10\" ] }, { \"name\": \"nCoV_NegRT\", \"description\": \"\", \"barcodes\": [ \"NB11\" ] } ] } for For ALL protocols with Rapid barcodes, it would look something like this: { \"title\": \"SARS-CoV-2 kirby-41\", \"samples\": [ { \"name\": \"nCoV_1634\", \"description\": \"\", \"barcodes\": [ \"BC01\" ] }, { \"name\": \"nCoV_1646\", \"description\": \"\", \"barcodes\": [ \"BC02\" ] }, { \"name\": \"nCoV_1645\", \"description\": \"\", \"barcodes\": [ \"BC03\" ] }, { \"name\": \"nCoV_1628\", \"description\": \"\", \"barcodes\": [ \"BC04\" ] }, { \"name\": \"nCoV_1664\", \"description\": \"\", \"barcodes\": [ \"BC05\" ] }, { \"name\": \"nCoV_1644\", \"description\": \"\", \"barcodes\": [ \"BC06\" ] }, { \"name\": \"nCoV_1641\", \"description\": \"\", \"barcodes\": [ \"BC07\" ] }, { \"name\": \"nCoV_1638\", \"description\": \"\", \"barcodes\": [ \"BC08\" ] }, { \"name\": \"nCoV_1642\", \"description\": \"\", \"barcodes\": [ \"BC09\" ] }, { \"name\": \"nCoV_1647\", \"description\": \"\", \"barcodes\": [ \"BC10\" ] }, { \"name\": \"nCoV_1648\", \"description\": \"\", \"barcodes\": [ \"BC11\" ] } ] } for For ALL protocols with ONE SAMPLE /NO barcodes, it would look something like this: { \"title\": \"SARS-CoV-2 kirby-47\" } cmd.txt This file is just a text file to keep track of the command being run. You need to parse the fastq_pass folder to RAMPART. For ARTIC with NATIVE barcodes: rampart --verbose --protocol ~/artic-ncov2019/rampart/ --ports 4010 4011 --basecalledPath /data/PLPL172071/Kirby_ARTIC_V3_690-712/20200828_0046_1C_PAF09161_1c3442d1/fastq_pass/ for Eden with NATIVE barcodes: rampart --verbose --protocol ~/SARS-CoV-2_GTG/protocols/Kirby/V1/ --ports 4010 4011 --basecalledPath /data/PLPL172071/Kirby_ARTIC_V3_690-712/20200828_0046_1C_PAF09161_1c3442d1/fastq_pass/ for Midnight with NATIVE barcodes: rampart --verbose --protocol ~/SARS-CoV-2_GTG/protocols/Midnight/V1/ --ports 4010 4011 --basecalledPath /data/PLPL172071/Kirby_ARTIC_V3_690-712/20200828_0046_1C_PAF09161_1c3442d1/fastq_pass/ for Eden with RAPID barcodes: it's the same as above, but with added flags to parse through to porechop --annotationOptions require_two_barcodes=\"False\" barcode_set=\"rapid\" rampart --verbose --protocol /home/prom/SARS-CoV-2_GTG/protocols/Kirby/V1/ --ports 4010 4011 --basecalledPath /data/PQPR302183/kirby_artic_2/20201218_0548_1G_PAF28510_509ee0c7/fastq_pass/ --annotationOptions require_two_barcodes=\"False\" barcode_set=\"rapid\" for Midnight with RAPID barcodes: rampart --verbose --protocol /home/prom/SARS-CoV-2_GTG/protocols/Midnight/V1/ --ports 4010 4011 --basecalledPath /data/PQPR302183/kirby_artic_2/20201218_0548_1G_PAF28510_509ee0c7/fastq_pass/ --annotationOptions require_two_barcodes=\"False\" barcode_set=\"rapid\"","title":"Real-time monitoring"},{"location":"realtime/#real-time-monitoring","text":"Using RAMPART, we can monitor the sequencing depth in real time for each sample across all amplicons. This allows the user to know when they have enough depth and coverage, and stop the run, for rapid turn around times, and for re-using flowcells. The documentation for RAMPART is located here: RAMPART: artic-network/rampart Here is how we set it up and run it for modified protocols.","title":"Real-time monitoring"},{"location":"realtime/#installation","text":"Please see Intallation page for conda and repository setup. For use, please refer to the relevent protocol.","title":"Installation"},{"location":"realtime/#protocol-files","text":"","title":"Protocol files"},{"location":"realtime/#artic-v3","text":"Each protocol with different primer/amplicon sets, will need their own configuration files to work with RAMPART (and the ARTIC analysis pipeline too). For RAMPART, the default files for artic V3 files are located in (path depends on install location of ncov2019 git) --protocol ~/artic-ncov2019/rampart/ it contains the following files: genome.json primers.json protocol.json README.md references.fasta If the reference is the same as used here, then you can simply copy genome.json references.fasta to your new protocol folder. Otherwise you will need to build these yourself. (shoot me a message and I can help) for primers.json, copy the main structure, but replace the values with your amplicon [start,stop] positions { \"name\": \"nCoV2019 primer scheme v1.0\", \"amplicons\": [ [30, 410], [320, 726], [642, 1028], [943, 1337], [1242, 1651], [1573, 1964], [1875, 2269], ... Notice that each primer is overlapping a bit here, so you are placing them as A/B/A/B or 1/2/1/2... The protocol.json is where you can place some information about the protocol and various thresholds for depth/coverage { \"name\": \"ARTIC nCoV2019 protocol v1.0\", \"description\": \"Amplicon based sequencing of novel coronavirus 2019 (nCoV2019).\", \"url\": \"http://artic.network/\", \"displayOptions\": { \"coverageThresholds\": { \" 200x\": 200, \" 100x\": 100, \" 20x\": 20, \"0x\": 0 } } }","title":"ARTIC V3"},{"location":"realtime/#eden-25kb","text":"Download RAMPART protocol files cd git clone https://github.com/Psy-Fer/SARS-CoV-2_GTG.git protocol located in --protocol ~/SARS-CoV-2_GTG/protocols/Kirby/V1/","title":"Eden 2.5kb"},{"location":"realtime/#midnight-12kb","text":"Download RAMPART protocol files (similar to Eden method above) cd git clone https://github.com/Psy-Fer/SARS-CoV-2_GTG.git protocol located in --protocol ~/SARS-CoV-2_GTG/protocols/Midnight/V1/","title":"Midnight 1.2kb"},{"location":"realtime/#experiment-files","text":"Two fies are needed for any experiment. run_configuration.json and cmd.txt","title":"Experiment files"},{"location":"realtime/#run_configurationjson","text":"A title, followed by details for each sample. For ALL protocols with Native barcodes, it would look something like this: { \"title\": \"SARS-CoV-2 kirby_artic-4 nCoV_694,699,706,707,711,712,690,708,660,673,NegRT\", \"samples\": [ { \"name\": \"nCoV_694\", \"description\": \"\", \"barcodes\": [ \"NB01\" ] }, { \"name\": \"nCoV_699\", \"description\": \"\", \"barcodes\": [ \"NB02\" ] }, { \"name\": \"nCoV_706\", \"description\": \"\", \"barcodes\": [ \"NB03\" ] }, { \"name\": \"nCoV_707\", \"description\": \"\", \"barcodes\": [ \"NB04\" ] }, { \"name\": \"nCoV_711\", \"description\": \"\", \"barcodes\": [ \"NB05\" ] }, { \"name\": \"nCoV_712\", \"description\": \"\", \"barcodes\": [ \"NB06\" ] }, { \"name\": \"nCoV_690\", \"description\": \"\", \"barcodes\": [ \"NB07\" ] }, { \"name\": \"nCoV_708\", \"description\": \"\", \"barcodes\": [ \"NB08\" ] }, { \"name\": \"nCoV_660\", \"description\": \"\", \"barcodes\": [ \"NB09\" ] }, { \"name\": \"nCoV_673\", \"description\": \"\", \"barcodes\": [ \"NB10\" ] }, { \"name\": \"nCoV_NegRT\", \"description\": \"\", \"barcodes\": [ \"NB11\" ] } ] } for For ALL protocols with Rapid barcodes, it would look something like this: { \"title\": \"SARS-CoV-2 kirby-41\", \"samples\": [ { \"name\": \"nCoV_1634\", \"description\": \"\", \"barcodes\": [ \"BC01\" ] }, { \"name\": \"nCoV_1646\", \"description\": \"\", \"barcodes\": [ \"BC02\" ] }, { \"name\": \"nCoV_1645\", \"description\": \"\", \"barcodes\": [ \"BC03\" ] }, { \"name\": \"nCoV_1628\", \"description\": \"\", \"barcodes\": [ \"BC04\" ] }, { \"name\": \"nCoV_1664\", \"description\": \"\", \"barcodes\": [ \"BC05\" ] }, { \"name\": \"nCoV_1644\", \"description\": \"\", \"barcodes\": [ \"BC06\" ] }, { \"name\": \"nCoV_1641\", \"description\": \"\", \"barcodes\": [ \"BC07\" ] }, { \"name\": \"nCoV_1638\", \"description\": \"\", \"barcodes\": [ \"BC08\" ] }, { \"name\": \"nCoV_1642\", \"description\": \"\", \"barcodes\": [ \"BC09\" ] }, { \"name\": \"nCoV_1647\", \"description\": \"\", \"barcodes\": [ \"BC10\" ] }, { \"name\": \"nCoV_1648\", \"description\": \"\", \"barcodes\": [ \"BC11\" ] } ] } for For ALL protocols with ONE SAMPLE /NO barcodes, it would look something like this: { \"title\": \"SARS-CoV-2 kirby-47\" }","title":"run_configuration.json"},{"location":"realtime/#cmdtxt","text":"This file is just a text file to keep track of the command being run. You need to parse the fastq_pass folder to RAMPART. For ARTIC with NATIVE barcodes: rampart --verbose --protocol ~/artic-ncov2019/rampart/ --ports 4010 4011 --basecalledPath /data/PLPL172071/Kirby_ARTIC_V3_690-712/20200828_0046_1C_PAF09161_1c3442d1/fastq_pass/ for Eden with NATIVE barcodes: rampart --verbose --protocol ~/SARS-CoV-2_GTG/protocols/Kirby/V1/ --ports 4010 4011 --basecalledPath /data/PLPL172071/Kirby_ARTIC_V3_690-712/20200828_0046_1C_PAF09161_1c3442d1/fastq_pass/ for Midnight with NATIVE barcodes: rampart --verbose --protocol ~/SARS-CoV-2_GTG/protocols/Midnight/V1/ --ports 4010 4011 --basecalledPath /data/PLPL172071/Kirby_ARTIC_V3_690-712/20200828_0046_1C_PAF09161_1c3442d1/fastq_pass/ for Eden with RAPID barcodes: it's the same as above, but with added flags to parse through to porechop --annotationOptions require_two_barcodes=\"False\" barcode_set=\"rapid\" rampart --verbose --protocol /home/prom/SARS-CoV-2_GTG/protocols/Kirby/V1/ --ports 4010 4011 --basecalledPath /data/PQPR302183/kirby_artic_2/20201218_0548_1G_PAF28510_509ee0c7/fastq_pass/ --annotationOptions require_two_barcodes=\"False\" barcode_set=\"rapid\" for Midnight with RAPID barcodes: rampart --verbose --protocol /home/prom/SARS-CoV-2_GTG/protocols/Midnight/V1/ --ports 4010 4011 --basecalledPath /data/PQPR302183/kirby_artic_2/20201218_0548_1G_PAF28510_509ee0c7/fastq_pass/ --annotationOptions require_two_barcodes=\"False\" barcode_set=\"rapid\"","title":"cmd.txt"},{"location":"seq/","text":"Nanopore Sequencing For Jill and Igor to fill in Please see publication for specific methods Publication: Analytical validity of nanopore sequencing for rapid SARS-CoV-2 genome analysis Pre-print: Analytical validity of nanopore sequencing for rapid SARS-CoV-2 genome analysis","title":"Sequencing"},{"location":"seq/#nanopore-sequencing","text":"For Jill and Igor to fill in Please see publication for specific methods Publication: Analytical validity of nanopore sequencing for rapid SARS-CoV-2 genome analysis Pre-print: Analytical validity of nanopore sequencing for rapid SARS-CoV-2 genome analysis","title":"Nanopore Sequencing"},{"location":"tute/","text":"","title":"Tutorial"}]}